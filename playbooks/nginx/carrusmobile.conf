server { 
     listen  80;     
#     server_name  driver.carrus-mobile.demo.eleks.com; 
      server_name  YOUR SERVER NAME;
     root /usr/share/nginx/html;

#  access_log /var/lib/nginx/website/carrusmobile/logs/driver.carrus-mobile.access.log main;
#  error_log  /var/lib/nginx/website/carrusmobile/logs/driver.carrus-mobile.error.log;

  access_log YOUR PATC TO LOGFILE.log;
  error_log  YOUR PATC TO LOGFILE.log;


  if ($request_uri !~ '\.well-known\/acme-challenge' ) {
    return  301 https://driver.carrus-mobile.demo.eleks.com$request_uri; }
}

server { 
     listen  443 ssl;  
#     server_name  driver.carrus-mobile.demo.eleks.com;
      server_name  YOUR SERVER NAME
   
#   access_log /var/lib/nginx/website/carrusmobile/logs/driver.carrus-mobile.access.log main;
#   error_log  /var/lib/nginx/website/carrusmobile/logs/driver.carrus-mobile.error.log;

    access_log YOUR PATC TO LOGFILE.log;
    error_log  YOUR PATC TO LOGFILE.log;

#       root   /var/lib/nginx/website/carrusmobile/www/;
       root   YOUR PATH TO WEBSITE FILES; 
        index  index.html;
        try_files /index.html  =404;
   

       # Attempt to load static files, if not found route to @rootfiles
        location ~ (.+)\.(json|txt|js|css|jpg|jpeg|gif|png|svg|ico|eot|otf|woff|woff2|ttf)$ {
        try_files $uri =404;
    } 

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;


        location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location ~ ^/.+ {
        return 302 /;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}


#    include /etc/nginx/bshept/ssl-generic.conf;
     include YOUR PATC TO SSL CONFIG.conf;
#    ssl_certificate    /var/lib/nginx/website/ssl-certs/com.eleks.demo.carrus-mobile.bundle.crt;
#    ssl_certificate_key /var/lib/nginx/website/ssl-certs/com.eleks.demo.carrus-mobile.key;

    ssl_certificate    YOUR PATC TO CERTFILE.crt;
    ssl_certificate_key YOUR PATC TO KEYFILE.key;


}


